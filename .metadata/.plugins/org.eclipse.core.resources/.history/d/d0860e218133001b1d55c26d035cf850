package com.recursion;

import java.util.Stack;

public class DelMiddleStackRecursion {

	public static void main(String[] args) {

		Stack<Integer> s= new Stack();
		s.push(1);
		s.push(10);
		s.push(7);
		s.push(2);
		//s.push(3);
		//s.push(9);
		int mid= s.size()/2;
		s.stream().forEach(i -> System.out.print(i+" "));
		System.out.println("");
		solve(s,mid);
		s.stream().forEach(i -> System.out.print(i+" "));
	}

	private static Stack<Integer> solve(Stack<Integer> s, int size) {

		if(size==0) {
			s.pop();
			return s;
		}
		int popped= s.pop();
		solve(s,size-1);
		s.push(popped);
		return s;
	}

}
